<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title> GameTactic </title>
    <link href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="//unpkg.com/vuetify/dist/vuetify.min.css">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no, minimal-ui">
    <style>
        .spinning {
            animation-name: spin;
            animation-duration: 5000ms;
            animation-iteration-count: infinite;
            animation-timing-function: linear;
        }

        @keyframes spin {
            from {
                transform: rotate(0deg);
            }
            to {
                transform: rotate(360deg);
            }
        }
    </style>
</head>
<body>
<div id="app">
    <div class="input">
        <v-app id="setup">
            <v-content>
                <v-container class="fill-height" fluid>
                    <v-row align="center" justify="center">
                        <v-col cols="12" sm="8" md="6">
                            <v-card class="elevation-12">
                                <v-toolbar color="primary" dark flat>
                                    <v-toolbar-title>GameTactic</v-toolbar-title>
                                </v-toolbar>
                                <router-view></router-view>
                            </v-card>
                        </v-col>
                    </v-row>
                </v-container>
            </v-content>
        </v-app>
    </div>
</div>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script src="//unpkg.com/vue/dist/vue.js"></script>
<script src="//unpkg.com/vuetify/dist/vuetify.min.js"></script>
<script src="https://unpkg.com/vue-router/dist/vue-router.js"></script>
<!--suppress ES6ModulesDependencies -->
<script>
    const Register = {
        template: `
        <div id="check-update">
            <v-card-text>
                <template v-if="'{{ error }}' === ''">
                     <v-stepper v-model="slide">
                        <v-stepper-header>
                            <v-stepper-step :complete="slide > 1" step="1"> Welcome </v-stepper-step>
                            <v-stepper-step :complete="slide > 2" step="2"> Terms of Service </v-stepper-step>
                            <v-stepper-step :complete="slide > 3" step="3"> Profile </v-stepper-step>
                            <v-stepper-step :complete="slide > 4" step="4"> Go! </v-stepper-step>
                        </v-stepper-header>
                    </v-stepper>
                    <v-divider style="margin: 15px 0 15px 0"/>
                    <v-form>
                        <template v-if="slide === 1">
                            <h2>Welcome, {{ username }}!</h2>
                            <br>
                            <p>
                                We need to check few things before we can continue.
                                Some are standard things, some are customizations for your account. <br> <br>
                                <i>Thank you for using GameTactic services!</i>
                            </p>
                        </template>
                        <template v-if="slide === 2">
                            <p>
                                Please click and read <a target="_blank" href="https://gametactic.eu/tos"> terms of service </a> fully.
                                When you're done, please agree them bellow.
                                <v-checkbox v-model="tos" @click="cannotContinue = false" :disabled="tos" label="I Accept Terms of Service" />
                            </p>
                        </template>
                        <template v-if="slide === 3">
                            <v-form v-model="usernameValid">
                                <p> Please select username. It will be same, even you login via different service. </p>
                                <v-text-field v-model="username" :rules="nameRules" label="Username" :counter="32"
                                    placeholder="{{ username }}" @input="onUsername()" required />
                            </v-form>
                        </template>
                        <template v-if="slide === 4">
                            <h2>Thank you {{ '{{ username }}' }}!</h2>
                            <br>
                            <p>
                                You are now ready to go. Just press "continue" and you will be redirected
                                back where you left off.
                            </p>
                        </template>
                    </v-form>
                </template>
                <template v-if="'{{ error }}' === 'registered'">
                    <p> You have already registered! </p>
                </template>
            </v-card-text>
            <v-divider style="margin-top: 15px" />
            <v-card-actions v-if="'{{ error }}' === ''">
                <v-spacer />
                <v-btn color="danger" @click="persist()">Debug</v-btn>
                <v-btn color="link" @click="previousSlide()" :disabled="slide <= 2 || slide === 4">Go Back</v-btn>
                <v-btn color="primary" @click="nextSlide()" :disabled="cannotContinue">Continue</v-btn>
            </v-card-actions>
        </div>
        `,
        data() {
            return {
                slide: 1,
                cannotContinue: false,
                tos: false,
                username: '',
                usernameValid: false,
                nameRules: [
                    v => !!v || 'Name is required',
                    v => v.length <= 32 || 'Username must be less than 32 characters',
                ],
                _token: '',
                _redirect: '',
            }
        },
        created() {
        },
        methods: {
            nextSlide: function () {
                console.log(this.slide > 4);
                if (this.slide === 4) {
                    this.redirect();

                    return;
                }

                this.slide++;
                this.cannotContinue = true;

                if (this.slide === 4) {
                    this.persist();
                }
            },
            previousSlide: function () {
                this.slide--;
                this.cannotContinue = false;
            },
            persist: async function () {
                const res = await axios.post('/register/{{ token }}', {
                    username: this.username,
                    tos: this.tos,
                });
                this._redirect = res.data.redirect;
                this._token = res.data.token;
                this.cannotContinue = false;
            },
            redirect: function() {
                const url = new URL(this._redirect === '' ? 'https://gametactic.eu' : this._redirect);
                url.searchParams.append('code', this._token);
                window.location = url.toString();
            },
            onUsername: function () {
                if (this.usernameValid) {
                    this.cannotContinue = false;
                }
            }
        }
    };

    // No touching bellow this //
    Vue.use(VueRouter);
    const router = new VueRouter({
        mode: "hash",
        routes: [
            {path: '', component: Register},
        ]
    });

    new Vue({
        el: '#app',
        vuetify: new Vuetify({icons: {iconfont: 'md'}}),
        router: router,
        components: {
            Register
        },
        data: {},
        methods: {}
    });
</script>
</body>
</html>
